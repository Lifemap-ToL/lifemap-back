---
- name: Base server install
  hosts: lifemap-back

  tasks:
      ### --- SYSTEM ---

      - name: Apt update
        become: true
        ansible.builtin.apt:
            cache_valid_time: 3600
            update_cache: true

      - name: Apt full-upgrade
        become: true
        ansible.builtin.apt:
            upgrade: "full"

      - name: Install common packages
        become: true
        ansible.builtin.apt:
            name:
                - locales-all
                - micro
                - htop
                - tmux
                - ca-certificates
                - curl
                - gnupg
                - apt-transport-https
                - bzip2
                - git
                - netcat-traditional
                - rsync
                - zip
                - ufw
                - unattended-upgrades
            state: present

      - name: Set timezone to Europe/Paris
        become: true
        community.general.timezone:
            name: Europe/Paris

      - name: Create 20auto-upgrades
        become: true
        ansible.builtin.copy:
            dest: /etc/apt/apt.conf.d/20auto-upgrades
            content: "APT::Periodic::Update-Package-Lists \"1\";\nAPT::Periodic::Unattended-Upgrade \"1\";\n"
            force: true
            mode: preserve

      ### --- UFW ---

      - name: Deny everything and enable UFW
        become: true
        community.general.ufw:
            state: enabled
            policy: deny

      - name: Allow SSH
        become: true
        community.general.ufw:
            rule: allow
            name: OpenSSH

      - name: Allow HTTP
        become: true
        community.general.ufw:
            rule: allow
            port: 80

      - name: Allow HTTPS
        become: true
        community.general.ufw:
            rule: allow
            port: 443

      - name: Allow 443/udp
        become: true
        community.general.ufw:
            rule: allow
            port: 443
            proto: udp

      ### --- DOCKER INSTALL ---

      - name: Add Ubuntu Docker GPG apt Key
        become: true
        ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present
        when: ansible_facts['distribution'] == "Ubuntu"

      - name: Add Ubuntu Docker Repository
        become: true
        ansible.builtin.apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu noble stable
            state: present
        when: ansible_facts['distribution'] == "Ubuntu"

      - name: Update apt and install docker-ce
        become: true
        ansible.builtin.apt:
            name:
                - docker-ce
                - docker-ce-cli
                - containerd.io
                - docker-buildx-plugin
                - docker-compose-plugin
            update_cache: true

      - name: Add user to docker group
        become: true
        ansible.builtin.user:
            name: "{{ ansible_user }}"
            append: true
            groups: docker

      ### --- NODE INSTALL ---

      - name: Remove nodejs if present
        become: true
        ansible.builtin.apt:
            name: nodejs
            state: absent
            autoremove: true

      - name: Add nodejs apt key
        become: true
        ansible.builtin.apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
            state: present

      - name: Add nodejs repository
        become: true
        ansible.builtin.apt_repository:
            repo: deb https://deb.nodesource.com/node_20.x nodistro main
            state: present

      - name: Update apt and install nodejs
        become: true
        ansible.builtin.apt:
            name: nodejs
            update_cache: true
            cache_valid_time: 3600

      ### --- PROMETHEUS INSTALL AND START ---

      - name: Create ~/prometheus directory
        ansible.builtin.file:
            path: "{{ prometheus_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0775"

      - name: Check if docker-compose.yml already exists
        ansible.builtin.stat:
            path: "{{ prometheus_dir }}/docker-compose.yml"
        register: docker_compose

      - name: Stop containers if needed
        become: true
        ansible.builtin.command:
            chdir: "{{ prometheus_dir }}"
            cmd: docker compose -f docker-compose.yml down
        changed_when: true
        when: docker_compose.stat.exists

      - name: Rsync docker files
        ansible.posix.synchronize:
            src: "../templates/prometheus/"
            dest: "{{ prometheus_dir }}"

      - name: Stop containers if needed
        become: true
        ansible.builtin.command:
            chdir: "{{ prometheus_dir }}"
            cmd: docker compose -f docker-compose.yml up -d
        changed_when: true
        when: docker_compose.stat.exists

      ### --- DIRECTORIES CREATION ---

      - name: Create www/static directory
        become: true
        ansible.builtin.file:
            path: "{{ static_root_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0775"

      - name: Create ~/back directory
        ansible.builtin.file:
            path: "{{ docker_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0775"

      - name: Create results directory
        ansible.builtin.file:
            path: "{{ build_results_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0755"

      - name: Create ncbi front directory
        ansible.builtin.file:
            path: "{{ front_root_dir }}/ncbi"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0775"

      - name: Create bbox front directory
        ansible.builtin.file:
            path: "{{ front_root_dir }}/bbox"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0775"

      - name: Create bbox data directory
        become: true
        ansible.builtin.file:
            path: "{{ docker_dir }}/bbox/data"
            state: directory
            owner: "{{ ansible_user }}"
            mode: "0755"
